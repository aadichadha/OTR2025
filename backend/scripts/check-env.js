#!/usr/bin/env node

require('dotenv').config();

console.log('üîç Environment Check for OTR Baseball Backend');
console.log('============================================');

// Check environment
console.log(`üåç NODE_ENV: ${process.env.NODE_ENV || 'not set'}`);
console.log(`üîó DATABASE_URL: ${process.env.DATABASE_URL ? 'Set' : 'Not set'}`);

// Check individual database variables (for development)
console.log(`üè† DB_HOST: ${process.env.DB_HOST || 'not set'}`);
console.log(`üîå DB_PORT: ${process.env.DB_PORT || 'not set'}`);
console.log(`üìä DB_NAME: ${process.env.DB_NAME || 'not set'}`);
console.log(`üë§ DB_USER: ${process.env.DB_USER || 'not set'}`);
console.log(`üîë DB_PASSWORD: ${process.env.DB_PASSWORD ? 'Set' : 'Not set'}`);

// Check other important variables
console.log(`üîê JWT_SECRET: ${process.env.JWT_SECRET ? 'Set' : 'Not set'}`);
console.log(`üåê FRONTEND_URL: ${process.env.FRONTEND_URL || 'not set'}`);

// Test database connection if possible
if (process.env.DATABASE_URL || (process.env.DB_HOST && process.env.DB_NAME)) {
  console.log('\nüîó Testing database connection...');
  
  const { testConnection } = require('../src/config/database');
  
  testConnection()
    .then(() => {
      console.log('‚úÖ Database connection successful!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Database connection failed:', error.message);
      process.exit(1);
    });
} else {
  console.log('\n‚ö†Ô∏è  No database configuration found, skipping connection test');
  console.log('üí° Set DATABASE_URL (production) or DB_HOST/DB_NAME (development)');
  process.exit(1);
} 